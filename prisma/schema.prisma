// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LidStatus {
  id     Int    @id @default(autoincrement())
  status String

  @@map("lid_status")
}

model ReasonLid {
  id        Int    @id @default(autoincrement())
  reasonLid String

  @@map("reason_lid")
}

model Role {
  id     Int         @id @default(autoincrement())
  name   String      @unique
  staffs StaffRole[]

  @@map("role")
}

model Branch {
  id         Int     @id @default(autoincrement())
  name       String  @unique
  address    String
  callNumber String
  groups     Group[]

  @@map("branch")
}

model Staff {
  id                 Int          @id @default(autoincrement())
  first_name         String?
  last_name          String?
  phone_number       String?
  login              String       @unique
  hashedPassword     String
  hashedRefreshToken String?
  is_active          String?
  roles              StaffRole[]
  groups             GroupStaff[]

  @@map("staff")
}

model Group {
  id                Int          @id @default(autoincrement())
  name              String       @unique
  lesson_start_time String?
  lesson_continuous String?
  lesson_week_day   String[]
  group_stage_id    Int?
  room_number       String?
  room_floor        Int?
  branch            Branch?      @relation(fields: [branchId], references: [id])
  branchId          Int?
  lessons_quant     Int?
  is_active         Boolean?
  staffs            GroupStaff[]

  @@map("group")
}

model GroupStaff {
  staff   Staff @relation(fields: [staffId], references: [id])
  staffId Int
  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  @@id([groupId, staffId])
  @@map("group_staff")
}

model StaffRole {
  staff   Staff @relation(fields: [staffId], references: [id])
  staffId Int
  role    Role  @relation(fields: [roleId], references: [id])
  roleId  Int

  @@id([staffId, roleId])
  @@map("staff_role")
}
